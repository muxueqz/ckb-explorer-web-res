{"version":3,"sources":["components/Header/MobileMenu/styled.tsx","components/Header/MobileMenu/index.tsx","components/Content/index.tsx","../node_modules/query-string/index.js","../node_modules/strict-uri-encode/index.js","../node_modules/decode-uri-component/index.js","../node_modules/split-on-first/index.js","pages/SearchFail/styled.tsx","pages/SearchFail/index.tsx"],"names":["MobileMenusPanel","styled","div","BlockchainComp","LanguageComp","SearchComp","ContentPanel","children","style","mobileMenuVisible","useAppState","components","MobileMenu","strictUriEncode","require","decodeComponent","splitOnFirst","validateArrayFormatSeparator","value","length","TypeError","encode","options","strict","encodeURIComponent","decode","removeHash","input","hashStart","indexOf","slice","extract","queryStart","parseValue","parseNumbers","Number","isNaN","trim","parseBooleans","toLowerCase","parse","Object","assign","sort","arrayFormat","arrayFormatSeparator","formatter","result","key","accumulator","exec","replace","undefined","concat","newValue","split","map","item","parserForArrayFormat","ret","create","param","includes","keys","k","reduce","Boolean","Array","isArray","keysSorter","a","b","exports","stringify","object","shouldFilter","skipNull","skipEmptyString","index","join","encoderForArrayFormat","objectCopy","filter","x","parseUrl","url","hash","query","parseFragmentIdentifier","fragmentIdentifier","stringifyUrl","queryFromUrl","parsedQueryFromUrl","queryString","getHash","module","str","charCodeAt","toString","toUpperCase","singleMatcher","RegExp","multiMatcher","decodeComponents","decodeURIComponent","err","left","right","prototype","call","tokens","match","i","encodedURI","replaceMap","entries","customDecodeURIComponent","string","separator","separatorIndex","SearchPanel","SearchContent","props","theme","primary","chainUrl","mainnetUrl","CONFIG","MAINNET_URL","testnetUrl","TESTNET_NAME","isMainnet","address","search","useLocation","parsed","q","type","Content","className","Search","content","hasButton","SearchFailType","CHAIN_ERROR","i18n","t","href","rel"],"mappings":"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","file":"static/js/41.f6886161.chunk.js","sourcesContent":["import styled from 'styled-components'\n\nexport const MobileMenusPanel = styled.div`\n  width: 100%;\n  background: #1c1c1c;\n  display: flex;\n  flex-direction: column;\n  position: fixed;\n  position: -webkit-fixed;\n  z-index: 2;\n  color: white;\n  top: 64px;\n  bottom: 0px;\n  overflow: hidden;\n`\n","import React from 'react'\nimport { MobileMenusPanel } from './styled'\nimport MenuItems from '../MenusComp'\nimport { SearchComp } from '../SearchComp'\nimport LanguageComp from '../LanguageComp'\nimport BlockchainComp from '../BlockchainComp'\n\nexport default () => {\n  return (\n    <MobileMenusPanel>\n      <MenuItems />\n      <BlockchainComp />\n      <LanguageComp />\n      <SearchComp />\n    </MobileMenusPanel>\n  )\n}\n","import React, { ReactNode } from 'react'\nimport styled from 'styled-components'\nimport { useAppState } from '../../contexts/providers'\nimport MobileMenu from '../Header/MobileMenu'\n\nconst ContentPanel = styled.div`\n  width: 100%;\n  overflow-x: hidden;\n  flex: 1;\n  margin-top: 64px;\n  background: #ededed;\n`\nexport default ({ children, style }: { children: ReactNode; style?: any }) => {\n  const {\n    components: { mobileMenuVisible },\n  } = useAppState()\n  return <ContentPanel style={style}>{mobileMenuVisible ? <MobileMenu /> : children}</ContentPanel>\n}\n","'use strict';\nconst strictUriEncode = require('strict-uri-encode');\nconst decodeComponent = require('decode-uri-component');\nconst splitOnFirst = require('split-on-first');\n\nconst isNullOrUndefined = value => value === null || value === undefined;\n\nfunction encoderForArrayFormat(options) {\n\tswitch (options.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn key => (result, value) => {\n\t\t\t\tconst index = result.length;\n\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, [encode(key, options), '[', index, ']'].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), '[', encode(index, options), ']=', encode(value, options)].join('')\n\t\t\t\t];\n\t\t\t};\n\n\t\tcase 'bracket':\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, [encode(key, options), '[]'].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [...result, [encode(key, options), '[]=', encode(value, options)].join('')];\n\t\t\t};\n\n\t\tcase 'comma':\n\t\tcase 'separator':\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (value === null || value === undefined || value.length === 0) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (result.length === 0) {\n\t\t\t\t\treturn [[encode(key, options), '=', encode(value, options)].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [[result, encode(value, options)].join(options.arrayFormatSeparator)];\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, encode(key, options)];\n\t\t\t\t}\n\n\t\t\t\treturn [...result, [encode(key, options), '=', encode(value, options)].join('')];\n\t\t\t};\n\t}\n}\n\nfunction parserForArrayFormat(options) {\n\tlet result;\n\n\tswitch (options.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /\\[(\\d*)\\]$/.exec(key);\n\n\t\t\t\tkey = key.replace(/\\[\\d*\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = {};\n\t\t\t\t}\n\n\t\t\t\taccumulator[key][result[1]] = value;\n\t\t\t};\n\n\t\tcase 'bracket':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /(\\[\\])$/.exec(key);\n\t\t\t\tkey = key.replace(/\\[\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\n\t\tcase 'comma':\n\t\tcase 'separator':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tconst isArray = typeof value === 'string' && value.split('').indexOf(options.arrayFormatSeparator) > -1;\n\t\t\t\tconst newValue = isArray ? value.split(options.arrayFormatSeparator).map(item => decode(item, options)) : value === null ? value : decode(value, options);\n\t\t\t\taccumulator[key] = newValue;\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\t}\n}\n\nfunction validateArrayFormatSeparator(value) {\n\tif (typeof value !== 'string' || value.length !== 1) {\n\t\tthrow new TypeError('arrayFormatSeparator must be single character string');\n\t}\n}\n\nfunction encode(value, options) {\n\tif (options.encode) {\n\t\treturn options.strict ? strictUriEncode(value) : encodeURIComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction decode(value, options) {\n\tif (options.decode) {\n\t\treturn decodeComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction keysSorter(input) {\n\tif (Array.isArray(input)) {\n\t\treturn input.sort();\n\t}\n\n\tif (typeof input === 'object') {\n\t\treturn keysSorter(Object.keys(input))\n\t\t\t.sort((a, b) => Number(a) - Number(b))\n\t\t\t.map(key => input[key]);\n\t}\n\n\treturn input;\n}\n\nfunction removeHash(input) {\n\tconst hashStart = input.indexOf('#');\n\tif (hashStart !== -1) {\n\t\tinput = input.slice(0, hashStart);\n\t}\n\n\treturn input;\n}\n\nfunction getHash(url) {\n\tlet hash = '';\n\tconst hashStart = url.indexOf('#');\n\tif (hashStart !== -1) {\n\t\thash = url.slice(hashStart);\n\t}\n\n\treturn hash;\n}\n\nfunction extract(input) {\n\tinput = removeHash(input);\n\tconst queryStart = input.indexOf('?');\n\tif (queryStart === -1) {\n\t\treturn '';\n\t}\n\n\treturn input.slice(queryStart + 1);\n}\n\nfunction parseValue(value, options) {\n\tif (options.parseNumbers && !Number.isNaN(Number(value)) && (typeof value === 'string' && value.trim() !== '')) {\n\t\tvalue = Number(value);\n\t} else if (options.parseBooleans && value !== null && (value.toLowerCase() === 'true' || value.toLowerCase() === 'false')) {\n\t\tvalue = value.toLowerCase() === 'true';\n\t}\n\n\treturn value;\n}\n\nfunction parse(input, options) {\n\toptions = Object.assign({\n\t\tdecode: true,\n\t\tsort: true,\n\t\tarrayFormat: 'none',\n\t\tarrayFormatSeparator: ',',\n\t\tparseNumbers: false,\n\t\tparseBooleans: false\n\t}, options);\n\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\n\n\tconst formatter = parserForArrayFormat(options);\n\n\t// Create an object with no prototype\n\tconst ret = Object.create(null);\n\n\tif (typeof input !== 'string') {\n\t\treturn ret;\n\t}\n\n\tinput = input.trim().replace(/^[?#&]/, '');\n\n\tif (!input) {\n\t\treturn ret;\n\t}\n\n\tfor (const param of input.split('&')) {\n\t\tlet [key, value] = splitOnFirst(options.decode ? param.replace(/\\+/g, ' ') : param, '=');\n\n\t\t// Missing `=` should be `null`:\n\t\t// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n\t\tvalue = value === undefined ? null : ['comma', 'separator'].includes(options.arrayFormat) ? value : decode(value, options);\n\t\tformatter(decode(key, options), value, ret);\n\t}\n\n\tfor (const key of Object.keys(ret)) {\n\t\tconst value = ret[key];\n\t\tif (typeof value === 'object' && value !== null) {\n\t\t\tfor (const k of Object.keys(value)) {\n\t\t\t\tvalue[k] = parseValue(value[k], options);\n\t\t\t}\n\t\t} else {\n\t\t\tret[key] = parseValue(value, options);\n\t\t}\n\t}\n\n\tif (options.sort === false) {\n\t\treturn ret;\n\t}\n\n\treturn (options.sort === true ? Object.keys(ret).sort() : Object.keys(ret).sort(options.sort)).reduce((result, key) => {\n\t\tconst value = ret[key];\n\t\tif (Boolean(value) && typeof value === 'object' && !Array.isArray(value)) {\n\t\t\t// Sort object keys, not values\n\t\t\tresult[key] = keysSorter(value);\n\t\t} else {\n\t\t\tresult[key] = value;\n\t\t}\n\n\t\treturn result;\n\t}, Object.create(null));\n}\n\nexports.extract = extract;\nexports.parse = parse;\n\nexports.stringify = (object, options) => {\n\tif (!object) {\n\t\treturn '';\n\t}\n\n\toptions = Object.assign({\n\t\tencode: true,\n\t\tstrict: true,\n\t\tarrayFormat: 'none',\n\t\tarrayFormatSeparator: ','\n\t}, options);\n\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\n\n\tconst shouldFilter = key => (\n\t\t(options.skipNull && isNullOrUndefined(object[key])) ||\n\t\t(options.skipEmptyString && object[key] === '')\n\t);\n\n\tconst formatter = encoderForArrayFormat(options);\n\n\tconst objectCopy = {};\n\n\tfor (const key of Object.keys(object)) {\n\t\tif (!shouldFilter(key)) {\n\t\t\tobjectCopy[key] = object[key];\n\t\t}\n\t}\n\n\tconst keys = Object.keys(objectCopy);\n\n\tif (options.sort !== false) {\n\t\tkeys.sort(options.sort);\n\t}\n\n\treturn keys.map(key => {\n\t\tconst value = object[key];\n\n\t\tif (value === undefined) {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (value === null) {\n\t\t\treturn encode(key, options);\n\t\t}\n\n\t\tif (Array.isArray(value)) {\n\t\t\treturn value\n\t\t\t\t.reduce(formatter(key), [])\n\t\t\t\t.join('&');\n\t\t}\n\n\t\treturn encode(key, options) + '=' + encode(value, options);\n\t}).filter(x => x.length > 0).join('&');\n};\n\nexports.parseUrl = (input, options) => {\n\toptions = Object.assign({\n\t\tdecode: true\n\t}, options);\n\n\tconst [url, hash] = splitOnFirst(input, '#');\n\n\treturn Object.assign(\n\t\t{\n\t\t\turl: url.split('?')[0] || '',\n\t\t\tquery: parse(extract(input), options)\n\t\t},\n\t\toptions && options.parseFragmentIdentifier && hash ? {fragmentIdentifier: decode(hash, options)} : {}\n\t);\n};\n\nexports.stringifyUrl = (input, options) => {\n\toptions = Object.assign({\n\t\tencode: true,\n\t\tstrict: true\n\t}, options);\n\n\tconst url = removeHash(input.url).split('?')[0] || '';\n\tconst queryFromUrl = exports.extract(input.url);\n\tconst parsedQueryFromUrl = exports.parse(queryFromUrl, {sort: false});\n\n\tconst query = Object.assign(parsedQueryFromUrl, input.query);\n\tlet queryString = exports.stringify(query, options);\n\tif (queryString) {\n\t\tqueryString = `?${queryString}`;\n\t}\n\n\tlet hash = getHash(input.url);\n\tif (input.fragmentIdentifier) {\n\t\thash = `#${encode(input.fragmentIdentifier, options)}`;\n\t}\n\n\treturn `${url}${queryString}${hash}`;\n};\n","'use strict';\nmodule.exports = str => encodeURIComponent(str).replace(/[!'()*]/g, x => `%${x.charCodeAt(0).toString(16).toUpperCase()}`);\n","'use strict';\nvar token = '%[a-f0-9]{2}';\nvar singleMatcher = new RegExp(token, 'gi');\nvar multiMatcher = new RegExp('(' + token + ')+', 'gi');\n\nfunction decodeComponents(components, split) {\n\ttry {\n\t\t// Try to decode the entire string first\n\t\treturn decodeURIComponent(components.join(''));\n\t} catch (err) {\n\t\t// Do nothing\n\t}\n\n\tif (components.length === 1) {\n\t\treturn components;\n\t}\n\n\tsplit = split || 1;\n\n\t// Split the array in 2 parts\n\tvar left = components.slice(0, split);\n\tvar right = components.slice(split);\n\n\treturn Array.prototype.concat.call([], decodeComponents(left), decodeComponents(right));\n}\n\nfunction decode(input) {\n\ttry {\n\t\treturn decodeURIComponent(input);\n\t} catch (err) {\n\t\tvar tokens = input.match(singleMatcher);\n\n\t\tfor (var i = 1; i < tokens.length; i++) {\n\t\t\tinput = decodeComponents(tokens, i).join('');\n\n\t\t\ttokens = input.match(singleMatcher);\n\t\t}\n\n\t\treturn input;\n\t}\n}\n\nfunction customDecodeURIComponent(input) {\n\t// Keep track of all the replacements and prefill the map with the `BOM`\n\tvar replaceMap = {\n\t\t'%FE%FF': '\\uFFFD\\uFFFD',\n\t\t'%FF%FE': '\\uFFFD\\uFFFD'\n\t};\n\n\tvar match = multiMatcher.exec(input);\n\twhile (match) {\n\t\ttry {\n\t\t\t// Decode as big chunks as possible\n\t\t\treplaceMap[match[0]] = decodeURIComponent(match[0]);\n\t\t} catch (err) {\n\t\t\tvar result = decode(match[0]);\n\n\t\t\tif (result !== match[0]) {\n\t\t\t\treplaceMap[match[0]] = result;\n\t\t\t}\n\t\t}\n\n\t\tmatch = multiMatcher.exec(input);\n\t}\n\n\t// Add `%C2` at the end of the map to make sure it does not replace the combinator before everything else\n\treplaceMap['%C2'] = '\\uFFFD';\n\n\tvar entries = Object.keys(replaceMap);\n\n\tfor (var i = 0; i < entries.length; i++) {\n\t\t// Replace all decoded components\n\t\tvar key = entries[i];\n\t\tinput = input.replace(new RegExp(key, 'g'), replaceMap[key]);\n\t}\n\n\treturn input;\n}\n\nmodule.exports = function (encodedURI) {\n\tif (typeof encodedURI !== 'string') {\n\t\tthrow new TypeError('Expected `encodedURI` to be of type `string`, got `' + typeof encodedURI + '`');\n\t}\n\n\ttry {\n\t\tencodedURI = encodedURI.replace(/\\+/g, ' ');\n\n\t\t// Try the built in decoder first\n\t\treturn decodeURIComponent(encodedURI);\n\t} catch (err) {\n\t\t// Fallback to a more advanced decoder\n\t\treturn customDecodeURIComponent(encodedURI);\n\t}\n};\n","'use strict';\n\nmodule.exports = (string, separator) => {\n\tif (!(typeof string === 'string' && typeof separator === 'string')) {\n\t\tthrow new TypeError('Expected the arguments to be of type `string`');\n\t}\n\n\tif (separator === '') {\n\t\treturn [string];\n\t}\n\n\tconst separatorIndex = string.indexOf(separator);\n\n\tif (separatorIndex === -1) {\n\t\treturn [string];\n\t}\n\n\treturn [\n\t\tstring.slice(0, separatorIndex),\n\t\tstring.slice(separatorIndex + separator.length)\n\t];\n};\n","import styled from 'styled-components'\n\nexport const SearchPanel = styled.div`\n  margin-top: 200px;\n  margin-bottom: 240px;\n\n  @media (max-width: 750px) {\n    margin-top: 120px;\n    margin-bottom: 150px;\n  }\n\n  .search__fail__bar {\n    width: 600px;\n    margin: 0 auto;\n\n    @media (max-width: 750px) {\n      width: 340px;\n    }\n  }\n`\n\nexport const SearchContent = styled.div`\n  font-size: 14px;\n  color: #606060;\n  margin: 0 auto;\n  margin-top: 20px;\n  text-align: center;\n  white-space: pre-wrap;\n  width: 600px;\n\n  @media (max-width: 750px) {\n    width: 340px;\n  }\n\n  a {\n    color: ${props => props.theme.primary};\n    margin-left: 3px;\n  }\n\n  a:hover {\n    color: ${props => props.theme.primary};\n  }\n\n  @media (max-width: 750px) {\n    font-size: 12px;\n  }\n\n  @media (max-width: 375px) {\n    font-size: 11px;\n  }\n\n  .search__fail__items {\n    font-weight: bold;\n    font-size: 16px;\n\n    @media (max-width: 750px) {\n      font-size: 12px;\n    }\n\n    @media (max-width: 375px) {\n      font-size: 11px;\n    }\n  }\n`\n","import React from 'react'\nimport queryString from 'query-string'\nimport { useLocation } from 'react-router-dom'\nimport Content from '../../components/Content'\nimport Search from '../../components/Search'\nimport i18n from '../../utils/i18n'\nimport { SearchFailType } from '../../utils/const'\nimport { isMainnet } from '../../utils/chain'\nimport { SearchContent, SearchPanel } from './styled'\nimport CONFIG from '../../config'\n\nconst chainErrorMessage = () => {\n  return isMainnet() ? i18n.t('search.address_type_testnet_error') : i18n.t('search.address_type_mainnet_error')\n}\n\nconst chainUrlMessage = () => {\n  return isMainnet() ? i18n.t('search.address_type_testnet_url') : i18n.t('search.address_type_mainnet_url')\n}\n\nexport const chainUrl = () => {\n  const mainnetUrl = `${CONFIG.MAINNET_URL}`\n  const testnetUrl = `${CONFIG.MAINNET_URL}/${CONFIG.TESTNET_NAME}`\n\n  return isMainnet() ? testnetUrl : mainnetUrl\n}\n\nexport default ({ address }: { address?: string }) => {\n  const { search } = useLocation()\n  const parsed = queryString.parse(search)\n  let { q, type } = parsed\n  q = address ? address : q\n\n  return (\n    <Content>\n      <SearchPanel className=\"container\">\n        <div className=\"search__fail__bar\">\n          <Search content={q as string} hasButton />\n        </div>\n        <SearchContent>\n          {(type && type === SearchFailType.CHAIN_ERROR) || address ? (\n            <div>\n              <span>{chainErrorMessage()}</span>\n              <a href={`${chainUrl()}/address/${q}`} rel=\"noopener noreferrer\">\n                {chainUrlMessage()}\n              </a>\n            </div>\n          ) : (\n            <>\n              <span>{i18n.t('search.empty_result')}</span>\n              <span className=\"search__fail__items\">{i18n.t('search.empty_result_items')}</span>\n            </>\n          )}\n        </SearchContent>\n      </SearchPanel>\n    </Content>\n  )\n}\n"],"sourceRoot":""}